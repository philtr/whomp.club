# The syntax to use for patterns in the Rules file. Can be either `"glob"` (the default) or `"legacy"`. The former will enable glob patterns, which behave
# like Ruby’s File.fnmatch. The latter will enable Nanoc 3.x-style patterns.
string_pattern_type: glob

# A list of file extensions that Nanoc will consider to be textual rather than
# binary. If an item with an extension not in this list is found,  the file
# will be considered as binary.
text_extensions:
  [
    "coffee",
    "css",
    "erb",
    "haml",
    "handlebars",
    "hb",
    "htm",
    "html",
    "js",
    "less",
    "markdown",
    "md",
    "ms",
    "mustache",
    "php",
    "rb",
    "rdoc",
    "sass",
    "scss",
    "slim",
    "txt",
    "xhtml",
    "xml",
  ]

# The path to the directory where all generated files will be written to. This
# can be an absolute path starting with a slash, but it can also be path
# relative to the site directory.
output_dir: output

# A list of index filenames, i.e. names of files that will be served by a web
# server when a directory is requested. Usually, index files are named
# “index.html”, but depending on the web server, this may be something else,
# such as “default.htm”. This list is used by Nanoc to generate pretty URLs.
index_filenames: ["index.html"]

# Whether or not to generate a diff of the compiled content when compiling a
# site. The diff will contain the differences between the compiled content
# before and after the last site compilation.
enable_output_diff: false

prune:
  # Whether to automatically remove files not managed by Nanoc from the output
  # directory.
  auto_prune: true

  # Which files and directories you want to exclude from pruning. If you version
  # your output directory, you should probably exclude VCS directories such as
  # .git, .svn etc.
  exclude: [".git", ".hg", ".svn", "CVS"]

# The data sources where Nanoc loads its data from. This is an array of
# hashes; each array element represents a single data source. By default,
# there is only a single data source that reads data from the “content/” and
# “layout/” directories in the site directory.
data_sources:
  - type: filesystem
    content_dir: content
    items_root: /
    layouts_root: /
    encoding: utf-8
    identifier_type: full
  - type: versioned 
    content_dir: content/games 
    items_root: /games/
    layouts_dir: null
    layouts_root: /
    encoding: utf-8
    identifier_type: full

# Navigation configuration for templates
nav:
  - title: Blog
    link: /
  - title: Games
    link: /games/
  - title: About
    link: /about/
  - title: Contact
    link: /contact/

# Configuration for the “check” command, which run unit tests on the site.
checks:
  # Configuration for the “internal_links” checker, which checks whether all
  # internal links are valid.
  internal_links:
    # A list of patterns, specified as regular expressions, to exclude from the check.
    # If an internal link matches this pattern, the validity check will be skipped.
    # E.g.:
    #   exclude: ['^/server_status']
    exclude: []
